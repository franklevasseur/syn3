{"version":3,"file":"static/css/main.07085ce2.css","mappings":"AAAA,KAKE,kCAAmC,CACnC,iCAAkC,CAJlC,mIAEY,CAHZ,QAMF,CAEA,KACE,uEAEF,CCPA,kCACE,cCkDF,CCzCA,cAcE,iBCuBiB,CCMjB,+FD6BsB,CDzDtB,qBGqEE,8CHpEF,UDiFF,CG9EE,kCACE,WFlBoB,CEmBpB,kBACA,UHgFJ,CG9EI,yCACE,YACA,WAEA,UH+EN,CG9DE,oCACE,eHgEJ,CG1DE,+DAEE,aH4DJ,CGzDE,yCACE,wCH2DJ,CGxDE,yCACE,YEzEI,CF0EJ,eH0DJ,CGvDE,uCACE,SHyDJ,CI9DE,qEAsBE,+CJ2CJ,CI7DE,mFAkBE,8CAhBA,kBArDM,CAsDN,uBDUW,CCTX,oHAEA,0DJ+DJ,CIzEE,iCAsBE,6CJsDJ,CIxEE,wCAkBE,gDAhBA,kBArDM,CAsDN,uBDUW,CCTX,oHAEA,0DJ0EJ,CChIE,oCACE,iBCkBe,CDjBf,iBDkIJ,CC9HI,gEACE,eAlCW,CAmCX,YDgIN,CC1HI,4EACE,WD4HN,CCxHE,0BAGE,kBDyHJ,CCvHI,8CACE,YDyHN,CItGE,8JAsBE,6CJsFJ,CIxGE,qIAkBE,8CAhBA,kBArDM,CAsDN,uBF0BqB,CEzBrB,oHAEA,oDJ0GJ,CIpHE,0DAsBE,6CJiGJ,CInHE,iEAkBE,8CAhBA,kBArDM,CAsDN,uBF0BqB,CEzBrB,oHAEA,oDJqHJ,CCrIE,8CAGE,UDqIJ,CClIE,+CEnBA,wHHwJF,CGtJE,2FACE,kBHwJJ,CGlJE,oKAEE,aHqJJ,CGlJE,qGACE,0DHoJJ,CGjJE,qGACE,YEzEI,CF0EJ,eHmJJ,CGhJE,iGACE,YHkJJ,CC1IA,2BACE,kBACA,WACA,cACA,kBACA,uDD6IF,CCzIA,4CACE,4BD4IF,CCzIA,mCAKE,aGTE,UHUF,UDyIF,CIzKE,6GAsBE,SJsJJ,CIxKE,2HAkBE,UAhBA,kBArDM,CAsDN,uBF0BqB,CEzBrB,4BAEA,oDJ0KJ,CIpLE,qDAsBE,SJiKJ,CInLE,4DAkBE,UAhBA,kBArDM,CAsDN,uBF0BqB,CEzBrB,4BAEA,oDJqLJ,CC7JE,yCACE,YD+JJ,CC3JE,4EACE,mBD6JJ,CCpJA,yBAEE,oBDsJF,CC/IE,8BACE,UDkJJ,CMjRI,uFACE,4BACA,wBNyVN,CMtVI,sFACE,6BACA,0BACA,iBNwVN,CMpVE,uCACE,aACA,aNsVJ,CMjVM,8FACE,yBNmVR,CMhVM,6FACE,yBNkVR,CM/UM,mGACE,kBNiVR,CO/WE,wCACE,qBPkaJ,CQpaE,qCACE,cACA,eACA,mBRudJ,CSzdE,kCACE,aTqhBJ,CS/gBE,0BACE,gBAEA,aTghBJ,CS9gBI,gDACE,+FTghBN,CS7gBI,uEAEE,eT8gBN,CS5gBM,mHACE,wHT8gBR,CUpiBE,oDACE,mBACA,YVulBJ,CW7kBA,cRwCE,+FD6BsB,CUHtB,aP9DY,CD6EV,6CJ2jBJ,CG5nBE,kCACE,WQfoB,CRgBpB,kBACA,UH8nBJ,CG5nBI,yCACE,YACA,WAEA,UH6nBN,CG5mBE,oCACE,kBH8mBJ,CGxmBE,+DAEE,aH0mBJ,CGvmBE,yCACE,wCHymBJ,CGtmBE,yCACE,YEzEI,CF0EJ,eHwmBJ,CGrmBE,uCACE,YHumBJ,CI5mBE,qEAsBE,+CJylBJ,CI3mBE,mFAkBE,8CAhBA,kBArDM,CAsDN,uBF0BqB,CEzBrB,oHAEA,oDJ6mBJ,CIvnBE,iCAsBE,6CJomBJ,CItnBE,wCAkBE,gDAhBA,kBArDM,CAsDN,uBF0BqB,CEzBrB,oHAEA,oDJwnBJ,CYznBE,8BACE,aZ2nBJ,CYxnBE,iCACE,0BZ0nBJ,CYtnBI,mCACE,+BZwnBN,CYjnBI,sCACE,aZsnBN,CY/mBI,kHACE,aZonBN,CYhnBE,6DAEE,4BC5E4B,CD6E5B,6CACA,aZknBJ,CYhnBI,iEACE,aZmnBN,CY/mBE,kEAEE,4BCvF4B,CDwF5B,6CACA,aZinBJ,CY/mBI,4EACE,gBACA,gBACA,aZknBN,CY9mBE,2DAEE,kBPrIS,COsIT,2EVhDyB,CUiDzB,aZgnBJ,CY3mBM,gJACE,aZ6mBR,CY9mBM,gJACE,aZgnBR,CYjnBM,gJACE,aZmnBR,CYpnBM,6IACE,aZsnBR,CWnuBE,oCACE,iBXquBJ,CWjuBE,6DAAyD,6DXouB3D,CWnuBE,8DAA0D,6DXsuB5D,CWruBE,gEAA4D,2DXwuB9D,CWvuBE,+DAA2D,2DX0uB7D,CWxuBE,+CROA,mEHouBF,CGluBE,2FACE,kBHouBJ,CG9tBE,oKAEE,aHiuBJ,CG9tBE,qGACE,wCHguBJ,CG7tBE,qGACE,YEzEI,CF0EJ,eH+tBJ,CG5tBE,iGACE,YH8tBJ,CYryBE,+EACE,aZuyBJ,CYpyBE,qFACE,yBZsyBJ,CYlyBI,yFACE,+BZoyBN,CY7xBI,kHACE,aZkyBN,CY3xBI,gTACE,aZgyBN,CY5xBE,gKAEE,6BCFuB,CDGvB,6CACA,aZ+xBJ,CY7xBI,wKAGE,aZ+xBN,CY3xBE,0KAEE,6BCfuB,CDgBvB,8CACA,aZ8xBJ,CY5xBI,8LACE,gBACA,gBACA,aZgyBN,CY5xBE,4JAEE,eP7CI,CO8CJ,kEVYoB,CUXpB,aZ+xBJ,CY1xBM,yVACE,aZ4xBR,CY7xBM,yVACE,aZ+xBR,CYhyBM,yVACE,aZkyBR,CYnyBM,mVACE,aZqyBR,CWhzBM,uDACE,kBG5DW,CH6DX,UXkzBR,CW/yBM,0DACE,YXizBR,CWvzBM,uDACE,kBG5DW,CH6DX,UXyzBR,CWtzBM,0DACE,YXwzBR,CW9zBM,uDACE,kBG5DW,CH6DX,UXg0BR,CW7zBM,0DACE,YX+zBR,CWr0BM,sDACE,kBG5DW,CH6DX,UXu0BR,CWp0BM,yDACE,YXs0BR,CWh0BA,wBACE,yBACA,WXm0BF,Cej5BA,KAEE,eAAiB,CAEjB,YAAa,CACb,qBAAsB,CAFtB,YAAa,CAFb,UAKF,CAEA,eACE,eACF,CAEA,WACE,aACF,CAEA,YAIE,aAAc,CAHd,cAAe,CACf,eAAiB,CACjB,iBAEF,CCvBA,aAME,kBAAmB,CAHnB,YAAa,CADb,iBAAkB,CAElB,gBAAiB,CAHjB,gBAAiB,CAOjB,gBAAiB,CACjB,eAAgB,CAFhB,YAAc,CAFd,eAKF,CAEA,cAEE,wBAAyB,CADzB,oBAEF,CAEA,gCACE,eAAgB,CAChB,eACF,CCpBA,aAIE,kBAAmB,CADnB,gBAAiB,CAEjB,iBAAkB,CAHlB,WAAY,CADZ,UAKF,CAEA,mBACE,SAAU,CACV,KACF,CAEA,wBACI,oCAA8B,CAA9B,4BACJ,CAEA,qBACE,SAAU,CACV,KACF,CAEA,0BACI,oCAA8B,CAA9B,4BACJ,CAEA,mBACE,SAAU,CACV,KACF,CAEA,wBACI,mCAA6B,CAA7B,2BACJ","sources":["index.css","../node_modules/@blueprintjs/popover2/src/_context-menu2.scss","../node_modules/@blueprintjs/popover2/lib/css/blueprint-popover2.css","../node_modules/@blueprintjs/popover2/src/_popover2.scss","../node_modules/node_modules/@blueprintjs/core/src/common/_variables.scss","../node_modules/@blueprintjs/popover2/src/_common.scss","../node_modules/node_modules/@blueprintjs/core/src/common/_react-transition.scss","../node_modules/node_modules/@blueprintjs/colors/lib/scss/colors.scss","../node_modules/@blueprintjs/popover2/src/_popover2-in-button-group.scss","../node_modules/@blueprintjs/popover2/src/_popover2-in-control-group.scss","../node_modules/@blueprintjs/popover2/src/_popover2-in-label.scss","../node_modules/@blueprintjs/popover2/src/_popover2-in-submenu.scss","../node_modules/@blueprintjs/popover2/src/_popover2-in-tree.scss","../node_modules/@blueprintjs/popover2/src/_tooltip2.scss","../node_modules/node_modules/@blueprintjs/core/src/common/_typography-colors.scss","../node_modules/node_modules/@blueprintjs/core/src/common/_color-aliases.scss","../node_modules/node_modules/@blueprintjs/core/src/common/_mixins.scss","App.css","SmartInput/index.css","TreeView.css"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"./common\";\n\n.#{$ns}-context-menu2-virtual-target {\n  position: fixed;\n}\n","/*\n\nCopyright 2021-present Palantir Technologies, Inc. All rights reserved.\nLicensed under the Apache License, Version 2.0.\n\n*/\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-context-menu2-virtual-target {\n  position: fixed;\n}\n\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-popover2 {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n  transform: scale(1);\n  border-radius: 2px;\n  display: inline-block;\n  z-index: 20;\n}\n.bp4-popover2 .bp4-popover2-arrow {\n  height: 30px;\n  position: absolute;\n  width: 30px;\n}\n.bp4-popover2 .bp4-popover2-arrow::before {\n  height: 20px;\n  margin: 5px;\n  width: 20px;\n}\n.bp4-popover2 .bp4-popover2-content {\n  background: #fff;\n}\n.bp4-popover2 .bp4-popover2-content,\n.bp4-popover2 .bp4-heading {\n  color: inherit;\n}\n.bp4-popover2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.2);\n}\n.bp4-popover2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.1;\n}\n.bp4-popover2 .bp4-popover2-arrow-fill {\n  fill: #fff;\n}\n.bp4-popover2-enter > .bp4-popover2, .bp4-popover2-appear > .bp4-popover2 {\n  transform: scale(0.3);\n}\n.bp4-popover2-enter-active > .bp4-popover2, .bp4-popover2-appear-active > .bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 300ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);\n}\n.bp4-popover2-exit > .bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-popover2 {\n  transform: scale(0.3);\n  transition-delay: 0;\n  transition-duration: 300ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);\n}\n.bp4-popover2 .bp4-popover2-content {\n  border-radius: 2px;\n  position: relative;\n}\n.bp4-popover2.bp4-popover2-content-sizing .bp4-popover2-content {\n  max-width: 350px;\n  padding: 20px;\n}\n.bp4-popover2-target + .bp4-overlay .bp4-popover2.bp4-popover2-content-sizing {\n  width: 350px;\n}\n.bp4-popover2.bp4-minimal {\n  margin: 0 !important;\n  /* stylelint-disable-line declaration-no-important */\n}\n.bp4-popover2.bp4-minimal .bp4-popover2-arrow {\n  display: none;\n}\n.bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-enter > .bp4-popover2.bp4-minimal.bp4-popover2, .bp4-popover2-appear > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-enter-active > .bp4-popover2.bp4-minimal.bp4-popover2, .bp4-popover2-appear-active > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-exit > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2.bp4-popover2-match-target-width {\n  width: 100%;\n}\n.bp4-popover2.bp4-dark, .bp4-dark .bp4-popover2 {\n  box-shadow: 0 0 0 1px hsl(215deg, 3%, 38%), inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n.bp4-popover2.bp4-dark .bp4-popover2-content, .bp4-dark .bp4-popover2 .bp4-popover2-content {\n  background: #2f343c;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-content,\n.bp4-popover2.bp4-dark .bp4-heading, .bp4-dark .bp4-popover2 .bp4-popover2-content,\n.bp4-dark .bp4-popover2 .bp4-heading {\n  color: inherit;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow::before, .bp4-dark .bp4-popover2 .bp4-popover2-arrow::before {\n  box-shadow: 0 0 0 1px #777a7e, 1px 1px 6px rgba(17, 20, 24, 0.4);\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow-border, .bp4-dark .bp4-popover2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.2;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-popover2 .bp4-popover2-arrow-fill {\n  fill: #2f343c;\n}\n\n.bp4-popover2-arrow::before {\n  border-radius: 1px;\n  content: \"\";\n  display: block;\n  position: absolute;\n  transform: rotate(45deg);\n}\n\n.bp4-overlay-backdrop.bp4-popover2-backdrop {\n  background: rgba(255, 255, 255, 0);\n}\n\n.bp4-popover2-transition-container {\n  opacity: 1;\n  display: flex;\n  z-index: 20;\n}\n.bp4-popover2-transition-container.bp4-popover2-enter, .bp4-popover2-transition-container.bp4-popover2-appear {\n  opacity: 0;\n}\n.bp4-popover2-transition-container.bp4-popover2-enter-active, .bp4-popover2-transition-container.bp4-popover2-appear-active {\n  opacity: 1;\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: opacity;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-transition-container.bp4-popover2-exit {\n  opacity: 1;\n}\n.bp4-popover2-transition-container.bp4-popover2-exit-active {\n  opacity: 0;\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: opacity;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-transition-container:focus {\n  outline: none;\n}\n.bp4-popover2-transition-container.bp4-popover2-leave .bp4-popover2-content {\n  pointer-events: none;\n}\n\nspan.bp4-popover2-target {\n  display: inline-block;\n}\n\n.bp4-popover2-target.bp4-fill {\n  width: 100%;\n}\n\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nCSS `border` property issues:\n- An element can only have one border.\n- Borders can't stack with shadows.\n- Borders modify the size of the element they're applied to.\n- Border positioning requires the extra `box-sizing` property.\n\n`box-shadow` doesn't have these issues, we're using it instead of `border`.\n*/\n.bp4-button-group:not(.bp4-minimal) > .bp4-popover2-target:not(:first-child) .bp4-button {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n.bp4-button-group:not(.bp4-minimal) > .bp4-popover2-target:not(:last-child) .bp4-button {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n  margin-right: -1px;\n}\n.bp4-button-group .bp4-popover2-target {\n  display: flex;\n  flex: 1 1 auto;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:first-child .bp4-button {\n  border-radius: 2px 2px 0 0;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:last-child .bp4-button {\n  border-radius: 0 0 2px 2px;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:not(:last-child) .bp4-button {\n  margin-bottom: -1px;\n}\n\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-control-group .bp4-popover2-target {\n  border-radius: inherit;\n}\n\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\nlabel.bp4-label .bp4-popover2-target {\n  display: block;\n  margin-top: 5px;\n  text-transform: none;\n}\n\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n.bp4-submenu .bp4-popover2-target {\n  display: block;\n}\n.bp4-submenu.bp4-popover2 {\n  box-shadow: none;\n  padding: 0 5px;\n}\n.bp4-submenu.bp4-popover2 > .bp4-popover2-content {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n}\n.bp4-dark .bp4-submenu.bp4-popover2, .bp4-submenu.bp4-popover2.bp4-dark {\n  box-shadow: none;\n}\n.bp4-dark .bp4-submenu.bp4-popover2 > .bp4-popover2-content, .bp4-submenu.bp4-popover2.bp4-dark > .bp4-popover2-content {\n  box-shadow: 0 0 0 1px hsl(215deg, 3%, 38%), inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-tree-node-secondary-label .bp4-popover2-target {\n  align-items: center;\n  display: flex;\n}\n\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-tooltip2 {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n  transform: scale(1);\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-popover2-arrow {\n  height: 22px;\n  position: absolute;\n  width: 22px;\n}\n.bp4-tooltip2 .bp4-popover2-arrow::before {\n  height: 14px;\n  margin: 4px;\n  width: 14px;\n}\n.bp4-tooltip2 .bp4-popover2-content {\n  background: #404854;\n}\n.bp4-tooltip2 .bp4-popover2-content,\n.bp4-tooltip2 .bp4-heading {\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.2);\n}\n.bp4-tooltip2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.1;\n}\n.bp4-tooltip2 .bp4-popover2-arrow-fill {\n  fill: #404854;\n}\n.bp4-popover2-enter > .bp4-tooltip2, .bp4-popover2-appear > .bp4-tooltip2 {\n  transform: scale(0.8);\n}\n.bp4-popover2-enter-active > .bp4-tooltip2, .bp4-popover2-appear-active > .bp4-tooltip2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-exit > .bp4-tooltip2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-tooltip2 {\n  transform: scale(0.8);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-tooltip2 .bp4-text-muted {\n  color: #abb3bf;\n}\n.bp4-tooltip2 .bp4-text-disabled {\n  color: rgba(171, 179, 191, 0.6);\n}\n.bp4-tooltip2 .bp4-running-text hr {\n  border-color: rgba(255, 255, 255, 0.2);\n}\n.bp4-tooltip2 a {\n  color: #8abbff;\n}\n.bp4-tooltip2 a:hover {\n  color: #8abbff;\n}\n.bp4-tooltip2 a .bp4-icon, .bp4-tooltip2 a .bp4-icon-standard, .bp4-tooltip2 a .bp4-icon-large {\n  color: inherit;\n}\n.bp4-tooltip2 a code {\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-code,\n.bp4-tooltip2 .bp4-running-text code {\n  background: rgba(17, 20, 24, 0.3);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.4);\n  color: #abb3bf;\n}\na > .bp4-tooltip2 .bp4-code,\na > .bp4-tooltip2 .bp4-running-text code {\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-code-block,\n.bp4-tooltip2 .bp4-running-text pre {\n  background: rgba(17, 20, 24, 0.3);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.4);\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-code-block > code,\n.bp4-tooltip2 .bp4-running-text pre > code {\n  background: none;\n  box-shadow: none;\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-key,\n.bp4-tooltip2 .bp4-running-text kbd {\n  background: #383e47;\n  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 1px 1px 0 rgba(17, 20, 24, 0.4);\n  color: #abb3bf;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-primary, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-primary, .bp4-tooltip2 .bp4-icon-large.bp4-intent-primary {\n  color: #8abbff;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-success, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-success, .bp4-tooltip2 .bp4-icon-large.bp4-intent-success {\n  color: #72ca9b;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-warning, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-warning, .bp4-tooltip2 .bp4-icon-large.bp4-intent-warning {\n  color: #fbb360;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-danger, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-danger, .bp4-tooltip2 .bp4-icon-large.bp4-intent-danger {\n  color: #fa999c;\n}\n.bp4-tooltip2 .bp4-popover2-content {\n  padding: 10px 12px;\n}\n.bp4-tooltip2.bp4-popover2-placement-top .bp4-popover2-arrow {\n  transform: translateY(-3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-left .bp4-popover2-arrow {\n  transform: translateX(-3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-bottom .bp4-popover2-arrow {\n  transform: translateY(3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-right .bp4-popover2-arrow {\n  transform: translateX(3px);\n}\n.bp4-tooltip2.bp4-dark, .bp4-dark .bp4-tooltip2 {\n  box-shadow: 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-content, .bp4-dark .bp4-tooltip2 .bp4-popover2-content {\n  background: #e5e8eb;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-content,\n.bp4-tooltip2.bp4-dark .bp4-heading, .bp4-dark .bp4-tooltip2 .bp4-popover2-content,\n.bp4-dark .bp4-tooltip2 .bp4-heading {\n  color: #404854;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow::before, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.4);\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow-border, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.2;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow-fill {\n  fill: #e5e8eb;\n}\n.bp4-tooltip2.bp4-dark .bp4-text-muted, .bp4-dark .bp4-tooltip2 .bp4-text-muted {\n  color: #5f6b7c;\n}\n.bp4-tooltip2.bp4-dark .bp4-text-disabled, .bp4-dark .bp4-tooltip2 .bp4-text-disabled {\n  color: rgba(95, 107, 124, 0.6);\n}\n.bp4-tooltip2.bp4-dark .bp4-running-text hr, .bp4-dark .bp4-tooltip2 .bp4-running-text hr {\n  border-color: rgba(17, 20, 24, 0.15);\n}\n.bp4-tooltip2.bp4-dark a, .bp4-dark .bp4-tooltip2 a {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark a:hover, .bp4-dark .bp4-tooltip2 a:hover {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark a .bp4-icon, .bp4-tooltip2.bp4-dark a .bp4-icon-standard, .bp4-tooltip2.bp4-dark a .bp4-icon-large, .bp4-dark .bp4-tooltip2 a .bp4-icon, .bp4-dark .bp4-tooltip2 a .bp4-icon-standard, .bp4-dark .bp4-tooltip2 a .bp4-icon-large {\n  color: inherit;\n}\n.bp4-tooltip2.bp4-dark a code, .bp4-dark .bp4-tooltip2 a code {\n  color: inherit;\n}\n.bp4-tooltip2.bp4-dark .bp4-code,\n.bp4-tooltip2.bp4-dark .bp4-running-text code, .bp4-dark .bp4-tooltip2 .bp4-code,\n.bp4-dark .bp4-tooltip2 .bp4-running-text code {\n  background: rgba(255, 255, 255, 0.7);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.2);\n  color: #5f6b7c;\n}\na > .bp4-tooltip2.bp4-dark .bp4-code,\na > .bp4-tooltip2.bp4-dark .bp4-running-text code, a > .bp4-dark .bp4-tooltip2 .bp4-code,\na > .bp4-dark .bp4-tooltip2 .bp4-running-text code {\n  color: #2d72d2;\n}\n.bp4-tooltip2.bp4-dark .bp4-code-block,\n.bp4-tooltip2.bp4-dark .bp4-running-text pre, .bp4-dark .bp4-tooltip2 .bp4-code-block,\n.bp4-dark .bp4-tooltip2 .bp4-running-text pre {\n  background: rgba(255, 255, 255, 0.7);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.15);\n  color: #1c2127;\n}\n.bp4-tooltip2.bp4-dark .bp4-code-block > code,\n.bp4-tooltip2.bp4-dark .bp4-running-text pre > code, .bp4-dark .bp4-tooltip2 .bp4-code-block > code,\n.bp4-dark .bp4-tooltip2 .bp4-running-text pre > code {\n  background: none;\n  box-shadow: none;\n  color: inherit;\n}\n.bp4-tooltip2.bp4-dark .bp4-key,\n.bp4-tooltip2.bp4-dark .bp4-running-text kbd, .bp4-dark .bp4-tooltip2 .bp4-key,\n.bp4-dark .bp4-tooltip2 .bp4-running-text kbd {\n  background: #fff;\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 1px 1px rgba(17, 20, 24, 0.2);\n  color: #5f6b7c;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-primary, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-primary, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-primary {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-success, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-success, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-success {\n  color: #1c6e42;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-warning, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-warning, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-warning {\n  color: #935610;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-danger, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-danger, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-danger {\n  color: #ac2f33;\n}\n.bp4-tooltip2.bp4-intent-primary .bp4-popover2-content {\n  background: #2d72d2;\n  color: #fff;\n}\n.bp4-tooltip2.bp4-intent-primary .bp4-popover2-arrow-fill {\n  fill: #2d72d2;\n}\n.bp4-tooltip2.bp4-intent-success .bp4-popover2-content {\n  background: #238551;\n  color: #fff;\n}\n.bp4-tooltip2.bp4-intent-success .bp4-popover2-arrow-fill {\n  fill: #238551;\n}\n.bp4-tooltip2.bp4-intent-warning .bp4-popover2-content {\n  background: #c87619;\n  color: #fff;\n}\n.bp4-tooltip2.bp4-intent-warning .bp4-popover2-arrow-fill {\n  fill: #c87619;\n}\n.bp4-tooltip2.bp4-intent-danger .bp4-popover2-content {\n  background: #cd4246;\n  color: #fff;\n}\n.bp4-tooltip2.bp4-intent-danger .bp4-popover2-arrow-fill {\n  fill: #cd4246;\n}\n\n.bp4-tooltip2-indicator {\n  border-bottom: dotted 1px;\n  cursor: help;\n}\n\n/*# sourceMappingURL=blueprint-popover2.css.map */","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@use \"sass:color\";\n@import \"./common\";\n\n$popover2-width: $pt-grid-size * 35 !default;\n$popover2-arrow-box-shadow: 1px 1px 6px rgba($black, $pt-drop-shadow-opacity) !default;\n// Extra border shadow added here to match the one in $pt-dark-popover-box-shadow.\n// We can't use a transparent color here because it is outset and will overlay other lines/borders underneath.\n// Also, it needs to have slightly increased lightness because its apparent width makes it look darker otherwise.\n$dark-popover2-arrow-box-shadow:\n  0 0 0 1px color.adjust($pt-dark-popover-border-color, $lightness: 10%),\n  1px 1px 6px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n\n.#{$ns}-popover2 {\n  @include popover2-sizing(\n    $arrow-square-size: 30px,\n    $arrow-offset: 4px,\n    $arrow-target-offset: -4px\n  );\n  @include popover2-appearance(\n    $pt-popover2-background-color,\n    inherit,\n    $pt-popover2-box-shadow,\n    $popover2-arrow-box-shadow,\n    $pt-border-shadow-opacity\n  );\n  @include scale-transition();\n  border-radius: $pt-border-radius;\n  display: inline-block;\n  z-index: $pt-z-index-overlay;\n\n  .#{$ns}-popover2-content {\n    border-radius: $pt-border-radius;\n    position: relative;\n  }\n\n  &.#{$ns}-popover2-content-sizing {\n    .#{$ns}-popover2-content {\n      max-width: $popover2-width;\n      padding: $pt-grid-size * 2;\n    }\n\n    // only inline popover2s get a width if this class is applied.\n    // note that an inline overlay will be an immediate next sibling\n    // of the popover2 target as of Blueprint 2.0.\n    .#{$ns}-popover2-target + .#{$ns}-overlay & {\n      width: $popover2-width;\n    }\n  }\n\n  &.#{$ns}-minimal {\n    // Popover2 with no obvious trigger will never have margin because the arrow is hidden,\n    // so it is safe to remove.\n    margin: 0 !important; /* stylelint-disable-line declaration-no-important */\n\n    .#{$ns}-popover2-arrow {\n      display: none;\n    }\n\n    &.#{$ns}-popover2 {\n      @include react-transition(\n        \"#{$ns}-popover2\",\n        (transform: scale(1) scale(1)),\n        $duration: $pt-transition-duration,\n        $after: \"> &\"\n      );\n    }\n  }\n\n  &.#{$ns}-popover2-match-target-width {\n    // parent element will have width styles set by our custom popper.js modifier,\n    // so we should fill that container's width\n    width: 100%;\n  }\n\n  &.#{$ns}-dark,\n  .#{$ns}-dark & {\n    @include popover2-appearance(\n      $pt-dark-popover2-background-color,\n      inherit,\n      $pt-dark-popover2-box-shadow,\n      $dark-popover2-arrow-box-shadow,\n      $pt-dark-border-shadow-opacity\n    );\n  }\n}\n\n// the box-shadow under the arrow SVG paths\n.#{$ns}-popover2-arrow::before {\n  border-radius: $pt-border-radius - 1;\n  content: \"\";\n  display: block;\n  position: absolute;\n  transform: rotate(45deg);\n}\n\n// use a more specific selector to ensure that we override core's _overlay.scss styles\n.#{$ns}-overlay-backdrop.#{$ns}-popover2-backdrop {\n  background: rgba($white, 0);\n}\n\n.#{$ns}-popover2-transition-container {\n  @include fade-transition();\n\n  // ensure element size exactly equals its children, no edge-case 4px spacing!\n  // (try removing this property with Slider content in example)\n  display: flex;\n  z-index: $pt-z-index-overlay;\n\n  &:focus {\n    outline: none;\n  }\n\n  // popover2 content should ignore pointer events during a popover2's exit transition\n  &.#{$ns}-popover2-leave .#{$ns}-popover2-content {\n    pointer-events: none;\n  }\n\n  // Popper.js applies this attribute when the target fully leaves boundaries\n  // &[data-x-out-of-boundaries] {\n  //   display: none;\n  // }\n}\n\nspan.#{$ns}-popover2-target {\n  // avoid `inline` elements as they won't account for padding etc\n  display: inline-block;\n\n  // this is important for span tag as default inline display height only includes text.\n  // div tag can be used for display: block, which works fine.\n}\n\n.#{$ns}-popover2-target {\n  &.#{$ns}-fill {\n    width: 100%;\n  }\n}\n","// Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@use \"sass:math\";\n@import \"color-aliases\";\n@import \"mixins\";\n\n// Namespace appended to the beginning of each CSS class: `.#{$ns}-button`.\n// N.B. No quotes around this string value, for Less syntax compatibility. Also, this cannot be overriden\n// (the JS components have this class prefix hard-coded), so it does not have the `!default` modifier.\n$ns: bp4;\n// Alias for BP users outside this repo\n$bp-ns: $ns;\n\n// easily the most important variable, so it comes up top\n// (so other variables can use it to define themselves)\n$pt-grid-size: 10px !default;\n\n// Icon variables\n\n$icons16-family: \"blueprint-icons-16\" !default;\n$icons20-family: \"blueprint-icons-20\" !default;\n\n$pt-icon-size-standard: 16px !default;\n$pt-icon-size-large: 20px !default;\n\n// Typography\n\n// see https://bitsofco.de/the-new-system-font-stack/\n$pt-font-family: -apple-system,\n                 \"BlinkMacSystemFont\",\n                 \"Segoe UI\",\n                 \"Roboto\",\n                 \"Oxygen\",\n                 \"Ubuntu\",\n                 \"Cantarell\",\n                 \"Open Sans\",\n                 \"Helvetica Neue\",\n                 $icons16-family, // support inline Blueprint icons\n                 sans-serif !default;\n\n$pt-font-family-monospace: monospace !default;\n\n$pt-font-size: $pt-grid-size * 1.4 !default;\n$pt-font-size-large: $pt-grid-size * 1.6 !default;\n$pt-font-size-small: $pt-grid-size * 1.2 !default;\n\n// a little bit extra to ensure the height comes out to just over 18px (and browser rounds to 18px)\n$pt-line-height: math.div($pt-grid-size * 1.8, $pt-font-size) + 0.0001 !default;\n\n// Grids & dimensions\n\n$pt-border-radius: floor(math.div($pt-grid-size, 5)) !default;\n\n// Buttons\n$pt-button-height: $pt-grid-size * 3 !default;\n$pt-button-height-small: $pt-grid-size * 2.4 !default;\n$pt-button-height-smaller: $pt-grid-size * 2 !default;\n$pt-button-height-large: $pt-grid-size * 4 !default;\n\n// Inputs\n$pt-input-height: $pt-grid-size * 3 !default;\n$pt-input-height-large: $pt-grid-size * 4 !default;\n$pt-input-height-small: $pt-grid-size * 2.4 !default;\n\n// Others\n$pt-navbar-height: $pt-grid-size * 5 !default;\n\n// Z-indices\n$pt-z-index-base: 0 !default;\n$pt-z-index-content: $pt-z-index-base + 10 !default;\n$pt-z-index-overlay: $pt-z-index-content + 10 !default;\n$pt-z-index-dialog-header: $pt-z-index-overlay + 10 !default;\n\n// Shadow opacities\n$pt-border-shadow-opacity: 0.1 !default;\n$pt-drop-shadow-opacity: 0.2 !default;\n$pt-dark-border-shadow-opacity: $pt-border-shadow-opacity * 2 !default;\n$pt-dark-drop-shadow-opacity: $pt-drop-shadow-opacity * 2 !default;\n\n// Elevations\n$pt-elevation-shadow-0: 0 0 0 1px $pt-divider-black !default;\n$pt-elevation-shadow-1: border-shadow($pt-border-shadow-opacity),\n                        0 1px 1px rgba($black, $pt-drop-shadow-opacity) !default;\n$pt-elevation-shadow-2: border-shadow($pt-border-shadow-opacity),\n                        0 1px 1px rgba($black, $pt-drop-shadow-opacity),\n                        0 2px 6px rgba($black, $pt-drop-shadow-opacity) !default;\n$pt-elevation-shadow-3: border-shadow($pt-border-shadow-opacity),\n                        0 2px 4px rgba($black, $pt-drop-shadow-opacity),\n                        0 8px 24px rgba($black, $pt-drop-shadow-opacity) !default;\n$pt-elevation-shadow-4: border-shadow($pt-border-shadow-opacity),\n                        0 4px 8px rgba($black, $pt-drop-shadow-opacity),\n                        0 18px 46px 6px rgba($black, $pt-drop-shadow-opacity) !default;\n\n$pt-dark-elevation-shadow-0: inset 0 0 0 1px rgba($white, 0.2) !default;\n$pt-dark-elevation-shadow-1: inset 0 0 0 1px rgba($white, 0.2),\n                             0 1px 1px 0 rgba($black, $pt-dark-drop-shadow-opacity) !default;\n$pt-dark-elevation-shadow-2: inset 0 0 0 1px rgba($white, 0.2),\n                             0 1px 1px rgba($black, $pt-dark-drop-shadow-opacity),\n                             0 2px 6px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n$pt-dark-elevation-shadow-3: inset 0 0 0 1px rgba($white, 0.2),\n                             0 2px 4px rgba($black, $pt-dark-drop-shadow-opacity),\n                             0 8px 24px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n$pt-dark-elevation-shadow-4: inset 0 0 0 1px rgba($white, 0.2),\n                             0 4px 8px rgba($black, $pt-dark-drop-shadow-opacity),\n                             0 18px 46px 6px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n\n// Transitions\n$pt-transition-ease: cubic-bezier(0.4, 1, 0.75, 0.9) !default;\n$pt-transition-ease-bounce: cubic-bezier(0.54, 1.12, 0.38, 1.11) !default;\n$pt-transition-duration: 100ms !default;\n\n// Light theme styles\n\n$pt-input-box-shadow: inset 0 0 0 1px rgba($black, 0.2),\n                      inset 0 1px 1px rgba($black, 0.5) !default;\n\n$pt-dialog-box-shadow: $pt-elevation-shadow-3 !default;\n$pt-popover-box-shadow: $pt-elevation-shadow-3 !default;\n$pt-tooltip-box-shadow: $pt-popover-box-shadow !default;\n// Equivalent to $pt-dark-elevation-shadow-3, but swaps the outset border for an inset one\n$pt-toast-box-shadow: inset border-shadow(0.2),\n                      0 2px 4px rgba($black, $pt-drop-shadow-opacity),\n                      0 8px 24px rgba($black, $pt-drop-shadow-opacity) !default;\n\n// Dark theme styles\n\n$pt-dark-input-box-shadow: inset 0 0 0 1px rgba($white, 0.2),\n                           inset 0 -1px 1px 0 $gray3 !default;\n$pt-dark-input-intent-box-shadow-colors: (\n  \"primary\": $blue4,\n  \"success\": $green4,\n  \"warning\": $orange4,\n  \"danger\" : $red4,\n) !default;\n\n$pt-dark-dialog-box-shadow: $pt-dark-elevation-shadow-3 !default;\n// Dark popover borders are outset, so they can't use rgba($white, 0.3).\n// They also can't use $gray1 because its blue tint is noticeably different from other white borders in dark theme.\n// Instead, we create a new color tuned to match semi-transparent white borders on a dark theme background.\n$pt-dark-popover-border-color: hsl(215deg, 3%, 38%) !default;\n$pt-dark-popover-box-shadow: 0 0 0 1px $pt-dark-popover-border-color,\n                             $pt-dark-elevation-shadow-3 !default;\n// Equivalent to $pt-dark-elevation-shadow-3 without the inset border\n$pt-dark-tooltip-box-shadow: 0 2px 4px rgba($black, $pt-dark-drop-shadow-opacity),\n                             0 8px 24px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n$pt-dark-toast-box-shadow: $pt-dark-elevation-shadow-3 !default;\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@use \"sass:math\";\n@import \"~@blueprintjs/colors/lib/scss/colors\";\n@import \"~@blueprintjs/core/src/common/variables\";\n@import \"~@blueprintjs/core/src/common/react-transition\";\n\n$pt-popover2-background-color: $white !default;\n$pt-popover2-box-shadow: $pt-elevation-shadow-3 !default;\n$pt-tooltip2-box-shadow: $pt-popover-box-shadow !default;\n$pt-dark-popover2-background-color: $dark-gray3 !default;\n$pt-dark-popover2-box-shadow:\n  0 0 0 1px $pt-dark-popover-border-color,\n  $pt-dark-elevation-shadow-3 !default;\n$pt-dark-tooltip2-box-shadow: $pt-dark-tooltip-box-shadow !default;\n\n// $arrow-offset: amount to shift arrow along edge of popover2\n// $arrow-target-offset: amount to shift arrow relative to target (perpendicular to popover2 edge)\n\n@mixin popover2-sizing($arrow-square-size, $arrow-offset, $arrow-target-offset) {\n  // since this is a 45-45-90 triangle, half hypotenuse === side * sqrt(2) / 2 === side / sqrt(2)\n  // fun fact: there's no built-in square root function in SASS\n  $arrow-diagonal-half-size: math.div($arrow-square-size, 1.41421356);\n  // we want the margin to be the size of the part of the arrow that is showing plus\n  // a little extra space.\n  $content-margin: floor($arrow-diagonal-half-size + $arrow-target-offset);\n  // we want to move the arrow out from where it's positioned by the gap amount\n  // plus the extra amount of width that is added by its 45 deg rotation.\n  $arrow-position: -$arrow-square-size * 0.5 + $arrow-offset;\n  // because the 45 deg rotation will make out div stick out a little bit further,\n  // we have to slide it over by that amount first and then by the set offset value\n  $computed-arrow-offset: ($arrow-diagonal-half-size - $arrow-square-size) * 0.5 + $arrow-offset;\n\n  .#{$ns}-popover2-arrow {\n    height: $arrow-square-size;\n    position: absolute;\n    width: $arrow-square-size;\n\n    &::before {\n      height: floor($arrow-diagonal-half-size - 1);\n      margin: ceil(($arrow-square-size - $arrow-diagonal-half-size) * 0.5);\n      // - 1 to compenstate for transparent pixel border shadow\n      width: floor($arrow-diagonal-half-size - 1);\n    }\n  }\n}\n\n// set background and text colors. also set box-shadow if provided (so modifier styles don't have to\n// reassign default shadows).\n\n@mixin popover2-appearance(\n  $background-color,\n  $text-color,\n  $shadows,\n  $arrow-box-shadow,\n  $arrow-border-fill-opacity\n) {\n  box-shadow: $shadows;\n\n  .#{$ns}-popover2-content {\n    background: $background-color;\n  }\n\n  // Some popovers (like tooltips) invert their foreground/background colors relative\n  // to what we expect for the theme. In those cases, we need to override global typography\n  // styles to get the right colors.\n  .#{$ns}-popover2-content,\n  .#{$ns}-heading {\n    color: $text-color;\n  }\n\n  .#{$ns}-popover2-arrow::before {\n    box-shadow: $arrow-box-shadow;\n  }\n\n  .#{$ns}-popover2-arrow-border {\n    fill: $black;\n    fill-opacity: $arrow-border-fill-opacity;\n  }\n\n  .#{$ns}-popover2-arrow-fill {\n    fill: $background-color;\n  }\n}\n\n@mixin fade-transition() {\n  @include react-transition(\"#{$ns}-popover2\", (opacity: 0 1), $before: \"&\");\n}\n\n@mixin scale-transition() {\n  @include react-transition(\n    \"#{$ns}-popover2\",\n    (transform: scale(0.3) scale(1)),\n    $duration: $pt-transition-duration * 3,\n    $easing: $pt-transition-ease-bounce,\n    $after: \"> &\"\n  );\n}\n","// Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n@mixin react-transition(\n  $name,\n  $properties,\n  $duration: $pt-transition-duration,\n  $easing: $pt-transition-ease,\n  $delay: 0,\n  $before: \"\",\n  $after: \"\"\n) {\n  @include each-prop($properties, 2);\n  @include react-transition-phase(\n    $name, \"enter\", $properties,\n    $duration, $easing, $delay,\n    $before, $after\n  );\n  @include react-transition-phase(\n    $name, \"exit\", $properties,\n    $duration, $easing, $delay,\n    $before, $after\n  );\n}\n\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n@mixin react-transition-phase(\n  $name,\n  $phase,\n  $properties,\n  $duration: $pt-transition-duration,\n  $easing: $pt-transition-ease,\n  $delay: 0,\n  $before: \"\",\n  $after: \"\"\n) {\n  $start-index: 1;\n  $end-index: 2;\n\n  @if ($phase == \"exit\") {\n    $start-index: 2;\n    $end-index: 1;\n  } @else if ($phase != \"enter\" and $phase != \"appear\") {\n    @error \"Unknown transition phase: #{$phase}. Expected appear|enter|exit.\";\n  }\n\n  #{transition-name($phase, $name, $before, $after)} {\n    @include each-prop($properties, $start-index);\n  }\n\n  #{transition-name(#{$phase}-active, $name, $before, $after)} {\n    @include each-prop($properties, $end-index);\n    transition-delay: $delay;\n    transition-duration: $duration;\n    transition-property: map-keys($properties);\n    /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n    transition-timing-function: $easing;\n  }\n}\n\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n@mixin each-prop($properties, $index) {\n  @each $prop, $values in $properties {\n    #{$prop}: nth($values, $index);\n  }\n}\n\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n@function transition-name($phase, $name, $before, $after) {\n  $full-name: \"#{$before}.#{$name}-#{$phase}#{$after}\";\n\n  @if ($phase == \"enter\") {\n    @return ($full-name, transition-name(\"appear\", $name, $before, $after));\n  } @else if ($phase == \"enter-active\") {\n    @return ($full-name, transition-name(\"appear-active\", $name, $before, $after));\n  } @else {\n    @return $full-name;\n  }\n}\n","/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n */\n\n$black: #111418 !default;\n\n$dark-gray1: #1c2127 !default;\n$dark-gray2: #252a31 !default;\n$dark-gray3: #2f343c !default;\n$dark-gray4: #383e47 !default;\n$dark-gray5: #404854 !default;\n\n$gray1: #5f6b7c !default;\n$gray2: #738091 !default;\n$gray3: #8f99a8 !default;\n$gray4: #abb3bf !default;\n$gray5: #c5cbd3 !default;\n\n$light-gray1: #d3d8de !default;\n$light-gray2: #dce0e5 !default;\n$light-gray3: #e5e8eb !default;\n$light-gray4: #edeff2 !default;\n$light-gray5: #f6f7f9 !default;\n\n$white: #fff !default;\n\n$blue1: #184a90 !default;\n$blue2: #215db0 !default;\n$blue3: #2d72d2 !default;\n$blue4: #4c90f0 !default;\n$blue5: #8abbff !default;\n\n$green1: #165a36 !default;\n$green2: #1c6e42 !default;\n$green3: #238551 !default;\n$green4: #32a467 !default;\n$green5: #72ca9b !default;\n\n$orange1: #77450d !default;\n$orange2: #935610 !default;\n$orange3: #c87619 !default;\n$orange4: #ec9a3c !default;\n$orange5: #fbb360 !default;\n\n$red1: #8e292c;\n$red2: #ac2f33;\n$red3: #cd4246;\n$red4: #e76a6e;\n$red5: #fa999c;\n\n$vermilion1: #96290d !default;\n$vermilion2: #b83211 !default;\n$vermilion3: #d33d17 !default;\n$vermilion4: #eb6847 !default;\n$vermilion5: #ff9980 !default;\n\n$rose1: #a82255 !default;\n$rose2: #c22762 !default;\n$rose3: #db2c6f !default;\n$rose4: #f5498b !default;\n$rose5: #ff66a1 !default;\n\n$violet1: #5c255c !default;\n$violet2: #7c327c !default;\n$violet3: #9d3f9d !default;\n$violet4: #bd6bbd !default;\n$violet5: #d69fd6 !default;\n\n$indigo1: #5642a6 !default;\n$indigo2: #634dbf !default;\n$indigo3: #7961db !default;\n$indigo4: #9881f3 !default;\n$indigo5: #bdadff !default;\n\n$cerulean1: #1f4b99 !default;\n$cerulean2: #2458b3 !default;\n$cerulean3: #2965cc !default;\n$cerulean4: #4580e6 !default;\n$cerulean5: #669eff !default;\n\n$turquoise1: #004d46 !default;\n$turquoise2: #007067 !default;\n$turquoise3: #00a396 !default;\n$turquoise4: #13c9ba !default;\n$turquoise5: #7ae1d8 !default;\n\n$forest1: #1d7324 !default;\n$forest2: #238c2c !default;\n$forest3: #29a634 !default;\n$forest4: #43bf4d !default;\n$forest5: #62d96b !default;\n\n$lime1: #43501b !default;\n$lime2: #5a701a !default;\n$lime3: #8eb125 !default;\n$lime4: #b6d94c !default;\n$lime5: #d4f17e !default;\n\n$gold1: #5c4405 !default;\n$gold2: #866103 !default;\n$gold3: #d1980b !default;\n$gold4: #f0b726 !default;\n$gold5: #fbd065 !default;\n\n$sepia1: #5e4123 !default;\n$sepia2: #7a542e !default;\n$sepia3: #946638 !default;\n$sepia4: #af855a !default;\n$sepia5: #d0b090 !default;\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"./common\";\n@import \"~@blueprintjs/core/src/components/button/common\";\n\n.#{$ns}-button-group {\n  // support wrapping buttons in a tooltip, which adds a wrapper element\n  &:not(.#{$ns}-minimal) {\n    > .#{$ns}-popover2-target:not(:first-child) .#{$ns}-button {\n      border-bottom-left-radius: 0;\n      border-top-left-radius: 0;\n    }\n\n    > .#{$ns}-popover2-target:not(:last-child) .#{$ns}-button {\n      border-bottom-right-radius: 0;\n      border-top-right-radius: 0;\n      margin-right: -$button-border-width;\n    }\n  }\n\n  .#{$ns}-popover2-target {\n    display: flex;\n    flex: 1 1 auto;\n  }\n\n  &.#{$ns}-vertical {\n    &:not(.#{$ns}-minimal) {\n      > .#{$ns}-popover2-target:first-child .#{$ns}-button {\n        border-radius: $pt-border-radius $pt-border-radius 0 0;\n      }\n\n      > .#{$ns}-popover2-target:last-child .#{$ns}-button {\n        border-radius: 0 0 $pt-border-radius $pt-border-radius;\n      }\n\n      > .#{$ns}-popover2-target:not(:last-child) .#{$ns}-button {\n        margin-bottom: -$button-border-width;\n      }\n    }\n  }\n}\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"./common\";\n\n.#{$ns}-control-group {\n  // Add border radius inheritance to support components wrapped in a popover\n  .#{$ns}-popover2-target {\n    border-radius: inherit;\n  }\n}\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"./common\";\n\nlabel.#{$ns}-label {\n  .#{$ns}-popover2-target {\n    display: block;\n    margin-top: $pt-grid-size * 0.5;\n    text-transform: none;\n  }\n}\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"./common\";\n@import \"~@blueprintjs/core/src/components/menu/common\";\n\n.#{$ns}-submenu {\n  .#{$ns}-popover2-target {\n    display: block;\n\n    // MenuItem doesn't render Popover2, only Popover, so we don't need the styles\n    // which render open submenu items as hovered/selected as we do in _submenu.scss\n  }\n\n  &.#{$ns}-popover2 {\n    box-shadow: none;\n    // horizontal padding leaves some space from parent menu item, and extends mouse zone\n    padding: 0 $half-grid-size;\n\n    > .#{$ns}-popover2-content {\n      box-shadow: $pt-popover-box-shadow;\n    }\n\n    .#{$ns}-dark &,\n    &.#{$ns}-dark {\n      box-shadow: none;\n\n      > .#{$ns}-popover2-content {\n        box-shadow: $pt-dark-popover-box-shadow;\n      }\n    }\n  }\n}\n\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"./common\";\n\n.#{$ns}-tree-node-secondary-label {\n  .#{$ns}-popover2-target {\n    align-items: center;\n    display: flex;\n  }\n}\n","// Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"~@blueprintjs/core/src/common/typography-colors\";\n@import \"./common\";\n\n$tooltip2-background-color: $dark-gray5 !default;\n$tooltip2-text-color: $light-gray5 !default;\n\n$dark-tooltip2-background-color: $light-gray3 !default;\n$dark-tooltip2-text-color: $dark-gray5 !default;\n\n$tooltip2-padding-vertical: $pt-grid-size !default;\n$tooltip2-padding-horizontal: 1.2 * $pt-grid-size !default;\n\n$tooltip2-arrow-box-shadow: 1px 1px 6px rgba($black, $pt-drop-shadow-opacity) !default;\n$dark-tooltip2-arrow-box-shadow: 1px 1px 6px rgba($black, $pt-dark-drop-shadow-opacity) !default;\n\n.#{$ns}-tooltip2 {\n  @include popover2-sizing(\n    $arrow-square-size: 22px,\n    $arrow-offset: 3px,\n    $arrow-target-offset: -4px\n  );\n  @include popover2-appearance(\n    $tooltip2-background-color,\n    $tooltip2-text-color,\n    $pt-tooltip2-box-shadow,\n    $tooltip2-arrow-box-shadow,\n    $pt-border-shadow-opacity\n  );\n  // lightweight scale for tooltips\n  @include react-transition(\n    \"#{$ns}-popover2\",\n    (transform: scale(0.8) scale(1)),\n    $duration: $pt-transition-duration,\n    $after: \"> &\"\n  );\n  // override typography because we use a dark background\n  @include pt-dark-typography-colors();\n\n  .#{$ns}-popover2-content {\n    padding: $tooltip2-padding-vertical $tooltip2-padding-horizontal;\n  }\n\n  // // need to adjust arrow placement a little bit for tooltips\n  &.#{$ns}-popover2-placement-top .#{$ns}-popover2-arrow { transform: translateY(-3px); }\n  &.#{$ns}-popover2-placement-left .#{$ns}-popover2-arrow { transform: translateX(-3px); }\n  &.#{$ns}-popover2-placement-bottom .#{$ns}-popover2-arrow { transform: translateY(3px); }\n  &.#{$ns}-popover2-placement-right .#{$ns}-popover2-arrow { transform: translateX(3px); }\n\n  &.#{$ns}-dark,\n  .#{$ns}-dark & {\n    @include popover2-appearance(\n      $dark-tooltip2-background-color,\n      $dark-tooltip2-text-color,\n      $pt-dark-tooltip2-box-shadow,\n      $dark-tooltip2-arrow-box-shadow,\n      $pt-dark-border-shadow-opacity\n    );\n    // override typography because we use a light background\n    @include pt-typography-colors();\n  }\n\n  @each $intent, $color in $pt-intent-colors {\n    &.#{$ns}-intent-#{$intent} {\n      .#{$ns}-popover2-content {\n        background: $color;\n        color: $white;\n      }\n\n      .#{$ns}-popover2-arrow-fill {\n        fill: $color;\n      }\n    }\n  }\n}\n\n.#{$ns}-tooltip2-indicator {\n  border-bottom: dotted 1px;\n  cursor: help;\n}\n","// Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@import \"variables\";\n@import \"variables-extended\";\n@import \"mixins\";\n\n@mixin pt-typography-colors() {\n  // N.B. we can't declare any global colors here because this mixin is @included at\n  // the root, outside of any selector, but _reset.scss sets the body text color for us.\n\n  .#{$ns}-text-muted {\n    color: $pt-text-color-muted;\n  }\n\n  .#{$ns}-text-disabled {\n    color: $pt-text-color-disabled;\n  }\n\n  .#{$ns}-running-text {\n    hr {\n      border-color: $pt-divider-black;\n    }\n  }\n\n  a {\n    color: $pt-link-color;\n\n    &:hover {\n      color: $pt-link-color;\n    }\n\n    #{$icon-classes} {\n      color: inherit;\n    }\n\n    code {\n      color: inherit;\n    }\n  }\n\n  .#{$ns}-code,\n  .#{$ns}-running-text code {\n    background: $pt-code-background-color;\n    box-shadow: inset border-shadow(0.2);\n    color: $pt-code-text-color;\n\n    a > & {\n      // <code> in links. markdown: [`code`](http://url)\n      // $pt-link-color does not have good contrast with non-link <code>'s in light theme, so we use a brighter hue\n      color: $pt-intent-primary;\n    }\n  }\n\n  .#{$ns}-code-block,\n  .#{$ns}-running-text pre {\n    background: $pt-code-background-color;\n    box-shadow: inset 0 0 0 1px $pt-divider-black;\n    color: $pt-text-color;\n\n    > code {\n      background: none;\n      box-shadow: none;\n      color: inherit;\n    }\n  }\n\n  .#{$ns}-key,\n  .#{$ns}-running-text kbd {\n    background: $white;\n    box-shadow: $pt-elevation-shadow-1;\n    color: $pt-text-color-muted;\n  }\n\n  #{$icon-classes} {\n    @each $intent, $color in $pt-intent-text-colors {\n      &.#{$ns}-intent-#{$intent} {\n        color: $color;\n      }\n    }\n  }\n}\n\n@mixin pt-dark-typography-colors() {\n  color: $pt-dark-text-color;\n\n  .#{$ns}-text-muted {\n    color: $pt-dark-text-color-muted;\n  }\n\n  .#{$ns}-text-disabled {\n    color: $pt-dark-text-color-disabled;\n  }\n\n  .#{$ns}-running-text {\n    hr {\n      border-color: $pt-dark-divider-white;\n    }\n  }\n\n  a {\n    color: $pt-dark-link-color;\n\n    &:hover {\n      color: $pt-dark-link-color;\n    }\n\n    #{$icon-classes} {\n      color: inherit;\n    }\n\n    code {\n      color: inherit;\n    }\n  }\n\n  .#{$ns}-code,\n  .#{$ns}-running-text code {\n    background: $pt-dark-code-background-color;\n    box-shadow: inset border-shadow(0.4);\n    color: $pt-dark-code-text-color;\n\n    a > & {\n      color: inherit;\n    }\n  }\n\n  .#{$ns}-code-block,\n  .#{$ns}-running-text pre {\n    background: $pt-dark-code-background-color;\n    box-shadow: inset 0 0 0 1px $pt-dark-divider-black;\n    color: $pt-dark-text-color;\n\n    > code {\n      background: none;\n      box-shadow: none;\n      color: inherit;\n    }\n  }\n\n  .#{$ns}-key,\n  .#{$ns}-running-text kbd {\n    background: $dark-gray4;\n    box-shadow: $pt-dark-elevation-shadow-1;\n    color: $pt-dark-text-color-muted;\n  }\n\n  #{$icon-classes} {\n    @each $intent, $color in $pt-dark-intent-text-colors {\n      &.#{$ns}-intent-#{$intent} {\n        color: $color;\n      }\n    }\n  }\n}\n","// Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n$pt-intent-primary: $blue3 !default;\n$pt-intent-success: $green3 !default;\n$pt-intent-warning: $orange3 !default;\n$pt-intent-danger: $red3 !default;\n\n$pt-app-background-color: $light-gray5 !default;\n$pt-dark-app-background-color: $dark-gray2 !default;\n\n$pt-outline-color: rgba($blue3, 0.6) !default;\n\n$pt-text-color: $dark-gray1 !default;\n$pt-text-color-muted: $gray1 !default;\n$pt-text-color-disabled: rgba($pt-text-color-muted, 0.6) !default;\n$pt-heading-color: $pt-text-color !default;\n$pt-link-color: $blue2 !default;\n$pt-dark-text-color: $light-gray5 !default;\n$pt-dark-text-color-muted: $gray4 !default;\n$pt-dark-text-color-disabled: rgba($pt-dark-text-color-muted, 0.6) !default;\n$pt-dark-heading-color: $pt-dark-text-color !default;\n$pt-dark-link-color: $blue5 !default;\n// Default text selection color using #7dbcff\n$pt-text-selection-color: rgba(125, 188, 255, 60%) !default;\n\n$pt-icon-color: $pt-text-color-muted !default;\n$pt-icon-color-hover: $pt-text-color !default;\n$pt-icon-color-disabled: $pt-text-color-disabled !default;\n$pt-icon-color-selected: $pt-intent-primary !default;\n$pt-dark-icon-color: $pt-dark-text-color-muted !default;\n$pt-dark-icon-color-hover: $pt-dark-text-color !default;\n$pt-dark-icon-color-disabled: $pt-dark-text-color-disabled !default;\n$pt-dark-icon-color-selected: $pt-intent-primary !default;\n\n$pt-divider-black: rgba($black, 0.15) !default;\n$pt-dark-divider-black: rgba($black, 0.4) !default;\n$pt-dark-divider-white: rgba($white, 0.2) !default;\n\n$pt-code-text-color: $pt-text-color-muted !default;\n$pt-dark-code-text-color: $pt-dark-text-color-muted !default;\n$pt-code-background-color: rgba($white, 0.7) !default;\n$pt-dark-code-background-color: rgba($black, 0.3) !default;\n","// Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n// Licensed under the Apache License, Version 2.0.\n\n@use \"sass:math\";\n@import \"~@blueprintjs/colors/lib/scss/colors\";\n@import \"flex\";\n\n$pt-intent-colors: (\n  \"primary\": $pt-intent-primary,\n  \"success\": $pt-intent-success,\n  \"warning\": $pt-intent-warning,\n  \"danger\" : $pt-intent-danger,\n) !default;\n\n$pt-intent-text-colors: (\n  \"primary\": $blue2,\n  \"success\": $green2,\n  \"warning\": $orange2,\n  \"danger\" : $red2,\n) !default;\n\n$pt-intent-active-text-colors: (\n  \"primary\": $blue1,\n  \"success\": $green1,\n  \"warning\": $orange1,\n  \"danger\": $red1\n) !default;\n\n$pt-dark-intent-text-colors: (\n  \"primary\": $blue5,\n  \"success\": $green5,\n  \"warning\": $orange5,\n  \"danger\" : $red5,\n) !default;\n\n@mixin intent-color($intentName) {\n  color: map-get($pt-intent-colors, $intentName);\n}\n\n@mixin position-all($position, $value) {\n  bottom: $value;\n  left: $value;\n  position: $position;\n  right: $value;\n  top: $value;\n}\n\n@mixin base-typography() {\n  font-size: $pt-font-size;\n  font-weight: 400;\n  letter-spacing: 0;\n  line-height: $pt-line-height;\n  text-transform: none;\n}\n\n@mixin running-typography() {\n  font-size: $pt-font-size;\n  line-height: 1.5;\n}\n\n@mixin heading-typography() {\n  color: $pt-heading-color;\n  font-weight: 600;\n\n  .#{$ns}-dark & {\n    color: $pt-dark-heading-color;\n  }\n}\n\n@mixin monospace-typography() {\n  font-family: $pt-font-family-monospace;\n  text-transform: none;\n}\n\n@mixin overflow-ellipsis() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n\n@mixin focus-outline($offset: 2px) {\n  outline: $pt-outline-color solid 2px;\n  outline-offset: $offset;\n  -moz-outline-radius: 6px;\n}\n\n@function border-shadow($alpha, $color: $black, $size: 1px) {\n  @return 0 0 0 $size rgba($color, $alpha);\n}\n\n// returns the padding necessary to center text in a container of the given height.\n// default line-height is that of base typography, 18px assuming 14px font-size.\n\n@function centered-text($height, $line-height: floor($pt-font-size * $pt-line-height)) {\n  @return floor(($height - $line-height) * 0.5);\n}\n\n// Removes the unit from a Sass numeric value (if present): `strip-unit(12px) => 12`\n// @see https://css-tricks.com/snippets/sass/strip-unit-function/\n\n@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return math.div($number, $number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n// Isolates z-indices\n\n@mixin new-render-layer() {\n  transform: translateZ(0);\n}\n","@import \"~@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\n\n.App {\n  padding: 1%;\n  background: white;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.error-message {\n  text-align: left;\n}\n\n.title-box {\n  margin: 0 0 1% 0;\n}\n\n.title-text {\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n  color: #316BCD;\n}\n\n.editor-box {\n}",".editor-root {\n  font-size: 1.5rem;\n  border-radius: 5px;\n  border: solid;\n  border-width: 1px;\n  text-align: left;\n  background: #f1f1f1;\n  padding: 0.25%;\n  margin-bottom: 1%;\n  overflow-x: auto;\n}\n\n.editor-error {\n  border: red solid 1px;\n  background-color: #ffdbdb;\n}\n\n.public-DraftStyleDefault-block {\n  overflow-x: auto;\n  white-space: pre;\n}\n","#treeWrapper {\n  width: 100%;\n  height: 75vh;\n  border: solid 1px;\n  background: #f1f1f1;\n  border-radius: 5px;\n}\n\n.node__root > circle {\n  fill: gray;\n  r: 3px;\n}\n\n.node__root > .rd3t-label {\n    transform: translate(-3%, -2%);\n}\n\n.node__branch > circle {\n  fill: gray;\n  r: 3px;\n}\n\n.node__branch > .rd3t-label {\n    transform: translate(-3%, -2%);\n}\n\n.node__leaf > circle {\n  fill: gray;\n  r: 3px;\n}\n\n.node__leaf > .rd3t-label {\n    transform: translate(-3%, 5%);\n}"],"names":[],"sourceRoot":""}